---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

const {
  as: Tag = "a",
  class: className,
  href,
  heading,
  subheading,
  imagePath,
  altText,
  style,
} = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/**/*.{jpeg,jpg,png,gif,svg}"
);
if (!images[imagePath]) {
  throw new Error(
    `"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif,svg}"`
  );
}
---

<style lang="css">
  h1 {
    margin: 0px;
  }
  .tag {
    display: flex;
    flex-direction: column;
    row-gap: 0.75rem;
    border-radius: 1rem;
    border-width: 1px;
    border-style: solid;
    border-color: hsl(var(--border));
    background-color: hsl(var(--primary-foreground));
    width: 100%;

    &.href {
      transition: all 0.3s;

      &:hover {
        border-color: hsl(var(--accent)) / 25%;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
      }
    }
  }

  .clickable-tag {
    transition: all 0.3s;
  }

  .clickable-tag:hover {
    border-color: hsl(var(--muted-foreground));
  }

  .tag-container {
    display: flex;
    flex-direction: column;
    row-gap: 0.375rem;

    padding-left: 1.25rem;
    padding-right: 1.25rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;

    .tag-header-container {
      display: flex;
      flex-direction: column;
      row-gap: 0.125rem;

      h1 {
        font-size: 1.125rem;
        font-weight: 500;
      }

      .sub-heading {
        color: hsl(var(--muted-foreground));
      }
    }
  }

  .image {
    height: 12rem;
    width: 100%;
    border-radius: 1rem;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    object-fit: contain;
    background-color: hsl(var(--card));
    background-color: transparent;
  }

  .project-image {
    width: 100%;

    @media (min-width: 640px) {
      width: 50%;
    }
  }

  a {
    text-decoration: none;
    color: hsl(var(--foreground));
  }
</style>
<Tag class={"tag " + (href ? " clickable-tag" : "")} href={href}>
  <Image
    src={images[imagePath]()}
    alt={altText}
    class="image"
    loading="eager"
    style={style}
  />

  <div class="tag-container">
    <div class="tag-header-container">
      <h1 class="">{heading}</h1>
      <div class="sub-heading">{subheading}</div>
    </div>
  </div>

  <slot />
</Tag>
